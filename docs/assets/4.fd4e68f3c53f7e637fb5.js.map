{"version":3,"sources":["webpack:///./src/front/hoc/withEnterAnimation/index.js","webpack:///./src/front/hoc/withEnterAnimation/styled/AnimatedDiv.js","webpack:///./src/front/hoc/withEnterAnimation/withEnterAnimation.js","webpack:///./src/front/pages/about/About.js","webpack:///./src/front/pages/about/Frameworkstructure.js","webpack:///./src/front/pages/about/Main.js","webpack:///./src/front/pages/about/index.js","webpack:///./src/front/pages/about/scenariotable.js","webpack:///./src/front/pages/about/scenariotabletests.js"],"names":["withEnterAnimation","fadeIn","keyframes","AnimatedDiv","styled","div","viewEnter","css","BaseComponent","WithEnterAnimation","passProps","props","Component","process","displayName","wrapDisplayName","About","PureComponent","HandleFramework","handleChange","bind","submitHandler","state","inputField","setFramework","changeFrameworkValue","toggleSplit","select","toggledropdown","changeValue","downLoadFramework","dropDownValue","splitButtonOpen","dropdownOpen","datasetname","generatePage","event","setState","name","target","innerText","value","e","currentTarget","textContent","getAttribute","pagename","framevalue","evt","preventDefault","handlerFrameworkFromParant","React","Main","handleData","toggle","handleInputChange","handleSubmitPageObjectModel","onDismiss","toggleInputDropDown","updateDropdown","handleChangeValue","handleTypes","getNavList","getFieldList","renderActionTest","renderGoToTest","handleNavItems","handlePageItems","handleSubmitTest","uploadFile","renderSomething","renderGoTo","renderAction","toggleActiveCard","toggleActiveCardTest","handleNavTest","handleNav","togglePopover","clean","handleTabFromChild","toggleSecondCard","toggleSecondCardTest","updateTable","updateTableFromChild","autoFillObjects","autoFillPageObjects","update","toggleDropdownTools","toggleSplitTools","toggleSplitAccessTypes","toggledropdownAccessType","handleTypesGenerationProcess","url","activeTab","imageURL","selectedFile","property","visible","actions","dataset","inputdropdownOpen","framework","submittedFramework","columns","columnstests","initialArray","frameworkdata","navnameselector","navname","page","selector","type","webElementTypes","id","typeName","types","objectname","navItems","pageObjectsNames","pageObjectValue","istest","selectedPage","leftCard","leftCardTest","popoverOpen","shouldUpdateTable","selectors1","selectors2","selectors3","accessType","prePage","dropdownOpenTools","splitButtonOpenTools","toolSelectedPage","splitButtonOpenAccessTypes","dropdownOpenAccessType","generateUrl","typeNameSelectors","data","initializeColumns","console","log","checked","tab","inputDropdownOpen","getUniqueNames","dataSetCollection","getNavItems","getFieldNames","postScenarioData2","dropdownpageobjects","fieldname","dropDownFieldObjects","scenarios","objectselector","objectvalue","inputDropDownPageObjects","dropDownPageObjects","autoFill","selectors","accessTypes","pages","files","fileReader","FileReader","readAsText","onload","onerror","error","backgroundColor","width","map","prop","padding","classnames","active","mapStateToProps","mapDispatchToProps","dispatch","bindActionCreators","compose","connect","Scenariotable","updatedKeyword","inputChangedHandler","removeRowOrPopUp","renderPopUpEdit","togglePopup","togglePopupAndSave","updateFinshed","seconds","diagramUpdateFlag","modal","setModal","updateTableFromParent","getAllScenariosByName","getById","scenario","editScenario","deleteScenario","p","keyword","index","ScenarioTableTests","onSelectCustomerRequest","removeButton","tapped"],"mappings":"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","file":"4.fd4e68f3c53f7e637fb5.js","sourcesContent":["// @flow\n\nimport withEnterAnimation from './withEnterAnimation';\n\nexport default withEnterAnimation;\n","// @flow\n\n// @region imports\nimport styled, { keyframes, css } from 'styled-components';\n// #endregion\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n    transform: none;\n  }\n`;\n\nconst AnimatedDiv = styled.div`\n  ${({ viewEnter }) =>\n    viewEnter &&\n    css`\n      opacity: 0;\n      animation-name: ${fadeIn};\n      animation-timing-function: ease-in;\n      animation-duration: 0.7s;\n      animation-delay: 0s;\n      animation-fill-mode: both;\n    `};\n`;\n\nexport default AnimatedDiv;\n","// @flow\n\n// #region imports\nimport React, { Component } from 'react';\nimport wrapDisplayName from 'recompose/wrapDisplayName';\nimport AnimatedDiv from './styled/AnimatedDiv';\n// #endregion\n\n// #region flow types\ntype Props = any;\n\ntype State = any;\n// #endregion\n\nfunction withEnterAnimation() {\n  return (BaseComponent: any) => {\n    class WithEnterAnimation extends Component<Props, State> {\n      render() {\n        const { ...passProps } = this.props;\n\n        return (\n          <AnimatedDiv viewEnter={true}>\n            <BaseComponent {...passProps} />\n          </AnimatedDiv>\n        );\n      }\n    }\n\n    /* eslint-disable no-process-env */\n    if (process.env.NODE_ENV !== 'production') {\n      // HOC would obfuscate component name, this trick is helpful for dev (we don't care in production)\n      WithEnterAnimation.displayName = wrapDisplayName(\n        BaseComponent,\n        'withEnterAnimation',\n      );\n    }\n    /* eslint-enable no-process-env */\n\n    return WithEnterAnimation;\n  };\n}\n\nexport default withEnterAnimation;\n","// @flow\r\n\r\nimport React, { PureComponent } from 'react';\r\nimport TaskBar from './Main';\r\n\r\n\r\n\r\nimport {\r\n  type Match,\r\n  type Location,\r\n  type RouterHistory,\r\n} from 'react-router-dom';\r\n\r\ntype Props = {\r\n  // react-router 4:\r\n  match: Match,\r\n  location: Location,\r\n  history: RouterHistory,\r\n\r\n  ...any,\r\n};\r\ntype State = any;\r\n\r\nclass About extends PureComponent<Props, State> {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br/>\r\n        <h1>Virtualization Tool</h1>\r\n        <br/>\r\n        <TaskBar/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\nimport {\n  Alert,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  Button,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  InputGroupButtonDropdown, ButtonDropdown,\n} from 'reactstrap';\nimport {getFrameWork} from '../../services/API/FetchServerData';\n\nclass HandleFramework extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n    this.state = {\n      inputField: '',\n    };\n    this.setFramework = this.setFramework.bind(this);\n    this.changeFrameworkValue = this.changeFrameworkValue.bind(this);\n    this.toggleSplit = this.toggleSplit.bind(this);\n    this.setFramework = this.setFramework.bind(this);\n    this.select = this.select.bind(this);\n    this.toggledropdown = this.toggledropdown.bind(this);\n    this.changeValue = this.changeValue.bind(this);\n    this.downLoadFramework = this.downLoadFramework.bind(this);\n    this.state = {\n      dropDownValue: 'Select action',\n      splitButtonOpen: false,\n      dropdownOpen: false,\n      datasetname: null,\n      generatePage: 'Page Name',\n    };\n  }\n\n  select(event) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n      name: event.target.innerText,\n    });\n  }\n\n  toggledropdown(event) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      generatePage: event.target.value,\n    });\n  }\n\n  changeValue(e) {\n    this.setState({dropDownValue: e.currentTarget.textContent});\n    let value = e.currentTarget.getAttribute('dataset');\n    this.setState({\n      datasetname: value,\n    });\n  }\n\n\n  toggleSplit() {\n    this.setState({\n      splitButtonOpen: !this.state.splitButtonOpen,\n    });\n  }\n\n  setFramework(value) {\n    const target = event.target;\n\n    this.setState({\n      pagename: target.value,\n    });\n  }\n\n  changeFrameworkValue(e) {\n    this.setState({dropDownValue: e.currentTarget.textContent});\n    let framevalue = e.currentTarget.getAttribute('framevalue');\n\n    this.setState({\n      pagename: framevalue,\n    });\n  }\n\n  submitHandler(evt) {\n    evt.preventDefault();\n\n    this.props.handlerFrameworkFromParant(this.state.pagename);\n\n    this.setState({\n      pagename: '',\n    });\n  }\n\n  async downLoadFramework() {\n    // try {\n    //   let data = await getFrameWork();\n    //   console.log(data);\n    //   this.setState({\n    //     frameworkData: data,\n    //   });\n    //\n    //   this.setState({\n    //     visible: false,\n    //   });\n    // } catch (e) {\n    //   console.log(e);\n    // }\n  }\n\n  render() {\n    return (\n      <div>\n        {/*<InputGroupButtonDropdown addonType=\"prepend\" isOpen={this.state.splitButtonOpen} toggle={this.toggleSplit}>*/}\n        {/*  <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggledropdown}>*/}\n        {/*    <DropdownToggle caret>*/}\n        {/*      {this.state.generatePage}*/}\n        {/*    </DropdownToggle>*/}\n        {/*    <DropdownMenu min-width=\"100px\" label={'test'}>*/}\n        {/*      {this.props.datasets.map(e => {*/}\n        {/*        return <DropdownItem key={e.id}*/}\n        {/*                             dataset={e.pagename}*/}\n        {/*                             value={e.pagename}*/}\n        {/*                             onClick={this.handleChange}*/}\n        {/*        >{e.pagename}*/}\n        {/*        </DropdownItem>;*/}\n        {/*      })}*/}\n        {/*    </DropdownMenu>*/}\n        {/*    <Button outline type=\"submit\" onClick={this.downLoadFramework}>Generate</Button>*/}\n        {/*  </ButtonDropdown>*/}\n        {/*</InputGroupButtonDropdown>*/}\n      </div>);\n  }\n}\n\nexport {HandleFramework};\n","import React from 'react';\nimport FileReader from 'filereader';\nimport fs from 'fs';\nimport HelpPageobjects from './helpPageobjects';\nimport Helptestobjectsactions from './helptestobjectsactions'\nimport Helptestobjectsgoto from './helptestobjectsgoto'\nimport {\n  getUniqueNames,\n  getNavItems, getFieldNames, postScenarioData2, autoFill, autoFillPageObjects,\n} from '../../services/API/FetchServerData';\nimport {\n  Alert,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Card,\n  Button,\n  Row,\n  CardBody,\n  InputGroupText,\n  Col,\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  InputGroupButtonDropdown,\n  CardHeader,\n} from 'reactstrap';\nimport Table from './scenariotable';\nimport TableTests from './scenariotabletests';\nimport {Scenariostructure} from './Scenariostructure';\nimport {Structure} from './structure';\nimport {StructureTest} from './structuretest';\nimport {Teststructurenavitems} from './teststructurenavitems';\nimport {TestStructurePageObjects} from './teststructurepageobjects';\nimport classnames from 'classnames';\nimport {HandleFramework} from './Frameworkstructure';\nimport HelpPage from './helppage'\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleData = this.handleData.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.toggledropdown = this.toggledropdown.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmitPageObjectModel = this.handleSubmitPageObjectModel.bind(this);\n    this.select = this.select.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n    this.changeValue = this.changeValue.bind(this);\n    this.toggleInputDropDown = this.toggleInputDropDown.bind(this);\n    this.toggleSplit = this.toggleSplit.bind(this);\n    this.updateDropdown = this.updateDropdown.bind(this);\n    this.setFramework = this.setFramework.bind(this);\n    this.changeFrameworkValue = this.changeFrameworkValue.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.handleTypes = this.handleTypes.bind(this);\n    this.getNavList = this.getNavList.bind(this);\n    this.getFieldList = this.getFieldList.bind(this);\n    this.renderActionTest = this.renderActionTest.bind(this);\n    this.renderGoToTest = this.renderGoToTest.bind(this);\n    this.handleNavItems = this.handleNavItems.bind(this);\n    this.handlePageItems = this.handlePageItems.bind(this);\n    this.handleSubmitTest = this.handleSubmitTest.bind(this);\n    this.uploadFile = this.uploadFile.bind(this)\n    this.renderSomething = this.renderSomething.bind(this);\n    this.renderGoTo = this.renderGoTo.bind(this);\n    this.renderAction = this.renderAction.bind(this);\n    this.toggleActiveCard = this.toggleActiveCard.bind(this);\n    this.toggleActiveCardTest = this.toggleActiveCardTest.bind(this);\n    this.handleNavTest = this.handleNavTest.bind(this);\n    this.toggleActiveCardTest = this.toggleActiveCardTest.bind(this);\n    this.handleNav = this.handleNav.bind(this);\n    this.togglePopover = this.togglePopover.bind(this);\n    this.clean = this.clean.bind(this);\n    this.handleTabFromChild = this.handleTabFromChild.bind(this);\n    this.toggleSecondCard = this.toggleSecondCard.bind(this);\n    this.toggleSecondCardTest = this.toggleSecondCardTest.bind(this);\n    this.updateTable = this.updateTable.bind(this);\n    this.updateTableFromChild = this.updateTableFromChild.bind(this);\n    this.autoFillObjects = this.autoFillObjects.bind(this);\n    this.autoFillPageObjects = this.autoFillPageObjects.bind(this);\n    this.update = this.update.bind(this);\n    this.toggleDropdownTools = this.toggleDropdownTools.bind(this);\n    this.toggleSplitTools = this.toggleSplitTools.bind(this);\n    this.toggleSplitAccessTypes = this.toggleSplitAccessTypes.bind(this);\n    this.toggledropdownAccessType = this.toggledropdownAccessType.bind(this);\n    this.handleTypesGenerationProcess = this.handleTypesGenerationProcess.bind(this);\n    this.state = {\n      url:'http://81.169.211.171:8096/',\n      activeTab: '1',\n      dropdownOpen: false,\n      imageURL: '',\n      selectedFile: null,\n      property: null,\n      value: '',\n      name: 'Framework',\n      visible: false,\n      actions: [],\n      dropDownValue: 'Select action',\n      dataset: '',\n      inputdropdownOpen: false,\n      splitButtonOpen: false,\n      pagename: 'unKnown',\n      framework: [],\n      submittedFramework: null,\n      columns: [],\n      columnstests: [],\n      initialArray: 1,\n      frameworkdata: [],\n      navnameselector: '',\n      navname: '',\n      page: '',\n      selector: '',\n      type: null,\n      webElementTypes: [{id: 1, typeName: 'id'}, {id: 2, typeName: 'css'},\n      ],\n      types: [{id: 1, typeName: 'input(id)'}, {id: 2, typeName: 'input(class)'}, {\n        id: 3,\n        typeName: 'input(css)',\n      }, {id: 4, typeName: 'input(name)'}, {id: 5, typeName: 'input(xpath)'}, {id: 6, typeName: 'button(id)'}, {\n        id: 7,\n        typeName: 'button(class)',\n      }, {id: 8, typeName: 'button(css)'}, {id: 9, typeName: 'button(name)'}, {\n        id: 10,\n        typeName: 'button(xpath)',\n      }, {id: 11, typeName: 'validateInput(id)'}, {id: 13, typeName: 'validateButton(id)'}, {\n        id: 14,\n        typeName: 'checkBox(id)',\n      }, {id: 15, typeName: 'option(id)'}, {id: 16, typeName: 'input(column,row)'}, {\n        id: 17,\n        typeName: 'validate(column,row)',\n      }, {id: 18, typeName: 'doubleClick(id)'}, {id: 19, typeName: 'dropDown(id)'}, {\n        id: 20,\n        typeName: 'datePicker(id)',\n      }],\n      typeName: 'Choose type',\n      objectname: '',\n      datasetname: '',\n      navItems: [],\n      pageObjectsNames: [],\n      pageObjectValue: '',\n      istest: '',\n      selectedPage: 'false',\n      renderSomething: 'false',\n      leftCard: 'true',\n      leftCardTest: 'true',\n      popoverOpen: true,\n      shouldUpdateTable: false,\n      selectors1: '',\n      selectors2: '',\n      selectors3: '',\n      accessType: '',\n      prePage: '',\n      dropdownOpenTools: false,\n      splitButtonOpenTools: false,\n      toolSelectedPage:'',\n      splitButtonOpenAccessTypes:false,\n      dropdownOpenAccessType:false,\n      generateUrl:'unKnown',\n      typeNameSelectors:'',\n    };\n  }\n\n  async handleData(data) {\n    this.setState({\n      pagename: data,\n      selectedPage: 'true',\n    });\n  }\n\n  async updateTableFromChild(data) {\n    this.setState({\n      shouldUpdateTable: data,\n    });\n  }\n\n  async handleTabFromChild(data) {\n    await this.initializeColumns();\n    await this.updateDropdown();\n    await this.getNavList();\n    await this.getFieldList();\n    this.setState({\n      activeTab: data,\n    });\n  }\n\n  updateTable() {\n    this.setState({\n      shouldUpdateTable: true,\n    });\n  }\n\n  handleNavItems(data) {\n    console.log(data);\n    this.setState(data);\n  }\n\n  handlePageItems(data) {\n    console.log(data);\n    this.setState(data);\n  }\n\n  handleChangeValue = e => this.setState({pagename: e.target.value});\n  setFramework = e => this.setState({pagename: e.target});\n\n  onDismiss() {\n    this.setState({visible: false});\n  }\n\n  handleInputChange(event) {\n    console.log(event.target.value);\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  select(event) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n      name: event.target.innerText,\n    });\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab,\n      });\n    }\n  }\n\n  toggledropdown(event) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  toggledropdownAccessType(event) {\n    this.setState({\n      dropdownOpenAccessType: !this.state.dropdownOpenAccessType,\n    });\n  }\n\n  toggleDropdownTools(event) {\n    this.setState({\n      dropdownOpenTools: !this.state.dropdownOpenTools,\n    });\n  }\n\n  toggleInputDropDown() {\n    this.setState({\n      inputDropdownOpen: !this.state.inputDropdownOpen,\n    });\n  }\n\n  toggleSplit() {\n    this.setState({\n      splitButtonOpen: !this.state.splitButtonOpen,\n    });\n  }\n\n  toggleSplitAccessTypes() {\n    this.setState({\n      splitButtonOpenAccessTypes: !this.state.splitButtonOpenAccessTypes,\n    });\n  }\n\n  toggleSplitTools() {\n    this.setState({\n      splitButtonOpenTools: !this.state.splitButtonOpenTools,\n    });\n  }\n\n  toggleActiveCard(e) {\n    this.clean();\n    if (e.target.value === 'false') {\n      this.setState({\n        leftCard: 'true',\n      });\n    }\n    if (e.target.value === 'true') {\n      this.setState({\n        leftCard: 'false',\n      });\n    }\n  }\n\n  toggleSecondCard(e) {\n    this.clean();\n    this.setState({\n      leftCard: 'false',\n    });\n  }\n\n  toggleSecondCardTest(e) {\n    this.clean();\n    this.setState({\n      leftCardTest: 'false',\n    });\n  }\n\n  toggleActiveCardTest(e) {\n    this.clean();\n    if (e.target.value === 'false') {\n      this.setState({\n        leftCardTest: 'true',\n      });\n    }\n    if (e.target.value === 'true') {\n      this.setState({\n        leftCardTest: 'false',\n      });\n    }\n  }\n\n  togglePopover(e) {\n    this.setState({\n      popoverOpen: !this.state.popoverOpen,\n    });\n  }\n\n  changeValue(e) {\n    this.setState({dropDownValue: e.currentTarget.textContent});\n    const value = e.currentTarget.getAttribute('pagename');\n\n    this.setState({\n      pagename: value,\n    });\n  }\n\n  changeFrameworkValue(e) {\n    this.setState({dropDownValue: e.currentTarget.textContent});\n    const framevalue = e.currentTarget.getAttribute('framevalue');\n\n    this.setState({\n      pagename: framevalue,\n    });\n  }\n\n  async componentDidMount() {\n    await this.updateDropdown();\n    await this.getNavList();\n    await this.getFieldList();\n    await this.initializeColumns();\n  }\n\n  initializeColumns() {\n    this.setState({\n      columns: ['#', 'Page', 'SubPage', 'SubPage Selector', 'Field Label', 'Field Name Selector', 'Type', 'Value'],\n      columnstests: ['#', 'SubPage', 'Field Label', 'Value'],\n    });\n  }\n\n  async updateDropdown() {\n  console.log(this.state.url);\n    const dataSetCollection = await getUniqueNames(this.state.url);\n    this.setState({\n      actions: dataSetCollection,\n    });\n  }\n\n  async getNavList() {\n    if (this.state.pagename !== '') {\n      const dataSetCollection = await getNavItems(this.state.url, this.state.pagename, 'false');\n      this.setState({\n        navItems: dataSetCollection,\n      });\n    }\n  }\n\n  async getFieldList() {\n    if (this.state.pagename !== '' && this.state.pagename !== null) {\n      const dataSetCollection = await getFieldNames(this.state.url, this.state.pagename, 'false');\n      this.setState({\n        pageObjectsNames: dataSetCollection,\n      });\n    }\n  }\n\n  async handleTypes(event) {\n    this.setState({\n      typeName: event.target.value,\n    });\n  }\n\n  async handleTypesGenerationProcess(event) {\n    this.setState({\n      typeNameSelectors: event.target.value,\n    });\n  }\n\n  async handleSubmitTest() {\n    event.preventDefault();\n    await this.handleNavTest(this.state.leftCardTest);\n    this.setState({\n      visible: true,\n    });\n    try {\n      let data = await postScenarioData2(this.state.url,\n        {\n          istest: 'true',\n          pagename: this.state.pagename,\n          navname: this.state.dropdownpageobjects,\n          navnameselector: '',\n          fieldname: this.state.dropDownFieldObjects,\n          selector: '',\n          type: '',\n          value: this.state.pageObjectValue,\n        });\n      console.log(data);\n      this.setState({\n        scenarios: data,\n      });\n\n      this.setState({\n        visible: false,\n      });\n      await this.initializeColumns();\n      await this.updateTable();\n      await this.toggleSecondCardTest();\n    } catch (e) {\n    }\n  }\n\n  async handleNav() {\n    if (this.state.leftCard === 'true') {\n      this.setState({\n        objectname: '',\n        objectselector: '',\n        typeName: '',\n        objectvalue: '',\n      });\n    } else {\n      this.setState({\n        navname: '',\n        navnameselector: '',\n      });\n    }\n  }\n\n  async handleNavTest(leftCard) {\n    if (leftCard === 'true') {\n      this.setState({\n        inputDropDownPageObjects: '',\n        pageObjectValue: '',\n      });\n    } else {\n      this.setState({\n        dropDownPageObjects: '',\n      });\n    }\n  }\n\n  async clean() {\n    this.setState({\n      objectname: '',\n      dropdownpageobjects: '',\n      inputDropDownPageObjects: '',\n      pageObjectValue: '',\n      objectselector: '',\n      typeName: '',\n      objectvalue: '',\n      navname: '',\n      navnameselector: '',\n    });\n  }\n\n  async handleSubmitPageObjectModel(event) {\n    event.preventDefault();\n    await this.handleNav();\n    this.setState({\n      visible: true,\n    });\n    try {\n      let data = await postScenarioData2(this.state.url,\n        {\n          istest: 'false',\n          pagename: this.state.pagename,\n          navname: this.state.navname,\n          navnameselector: this.state.navnameselector,\n          fieldname: this.state.objectname,\n          selector: this.state.objectselector,\n          type: this.state.typeName,\n          value: this.state.objectvalue,\n        });\n      this.setState({\n        scenarios: data,\n        visible: false,\n      });\n      await this.updateDropdown();\n      await this.getNavList();\n      await this.getFieldList();\n      await this.initializeColumns();\n      await this.toggleSecondCard();\n      await this.updateTable();\n    } catch (e) {\n    }\n  }\n\n  async update(event){\n    this.state.url = event.target.value;\n    await this.updateDropdown();\n    await this.getNavList();\n    await this.getFieldList();\n    await this.initializeColumns();\n    await this.toggleSecondCard();\n    await this.updateTable();\n  }\n\n  async autoFillObjects(event) {\n    event.preventDefault();\n    try {\n      let data = await autoFill(this.state.url, this.state.pagename);\n      await this.updateTable();\n    } catch (e) {\n    }\n  }\n\n  async autoFillPageObjects(event) {\n    let data =\n      {\n        istest: 'false',\n        pagename: this.state.pagename,\n        url: this.state.generateUrl,\n        selectors: this.state.selectors1 + \"___\" + this.state.selectors2 + \"___\" + this.state.selectors3,\n        accessTypes: this.state.typeNameSelectors,\n        pages: this.state.toolSelectedPage,\n      };\n    console.log(data);\n\n    event.preventDefault();\n    try {\n      console.log('was here')\n      let data = await autoFillPageObjects(this.state.url,\n        {\n          istest: 'false',\n          pagename: this.state.pagename,\n          url: this.state.generateUrl,\n          selectors: this.state.selectors1 + \"___\" + this.state.selectors2 + \"___\" + this.state.selectors3,\n          accessTypes: this.state.typeNameSelectors,\n        });\n      await this.updateTable();\n      await this.updateDropdown();\n      await this.getNavList();\n      await this.getFieldList();\n    } catch (e) {\n    }\n  }\n\n  async uploadFile(event) {\n    this.selectedFile = event.target.files[0];\n    const fileReader = new FileReader();\n    await fileReader.readAsText(this.selectedFile, 'UTF-8');\n    fileReader.onload = () => {\n    };\n    fileReader.onerror = (error) => {\n    };\n  }\n\n  renderSomething() {\n    if (this.state.renderSomething !== 'false') {\n      return (\n        <Input placeholder='Page name' name=\"pagename\" type=\"input\"\n               onChange={this.handleInputChange}/>\n      );\n    }\n    this.state.toolSelectedPage = this.state.pagename;\n  }\n\n  renderGoTo() {\n    if (this.state.leftCard === 'true') {\n      return (\n        <div>\n          <Card>\n            <CardHeader color=\"link\" icon=\"info\" tag=\"h5\">Target subpage\n              <Button className=\"float-right\" type=\"switch\" size=\"sm\" name=\"leftCard\" outline color=\"secondary\"\n                      value={this.state.leftCard} onClick={this.toggleActiveCard}>Switch</Button>\n            </CardHeader>\n            <CardBody style={{backgroundColor: 'Light'}}>\n              <br/>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">@ Label&nbsp;&nbsp;&nbsp;&nbsp;</InputGroupAddon>\n                <Input placeholder=\"Example: addProduct\" name=\"navname\"\n                       type=\"input\"\n                       value={this.state.navname || ''}\n                       onChange={this.handleInputChange}/>\n              </InputGroup>\n              <br/>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">@ Selector</InputGroupAddon>\n                <Input placeholder=\"Example: element[attribute='selector']\" name=\"navnameselector\"\n                       type=\"input\"\n                       value={this.state.navnameselector || ''}\n                       onChange={this.handleInputChange}/>\n              </InputGroup>\n              <br/>\n              <br/>\n              <br/>\n              <br/>\n              <HelpPageobjects name='A'/>\n            </CardBody>\n          </Card>\n        </div>);\n    }\n  }\n\n  renderAction() {\n    if (this.state.leftCard !== 'true') {\n      return (\n        <div>\n          <Card>\n            <CardHeader color=\"link\" icon=\"info\" tag=\"h5\">Target objects\n              <Button className=\"float-right\" type=\"switch\" size=\"sm\" name=\"leftCard\" outline color=\"secondary\"\n                      value={this.state.leftCard} onClick={this.toggleActiveCard}>Switch</Button>\n            </CardHeader>\n            <CardBody style={{backgroundColor: 'Light'}}>\n              <form onSubmit={this.handleSubmitPageObjectModel}>\n                <InputGroup style={{width: '100%'}}>\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <Input addon type=\"input\" aria-label=\"type\" value={this.state.typeName}/>\n                      <InputGroupButtonDropdown addonType=\"prepend\" isOpen={this.state.splitButtonOpen}\n                                                toggle={this.toggleSplit}>\n                        <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggledropdown}>\n                          <DropdownToggle caret>\n                            Choose Type\n                          </DropdownToggle>\n                          <DropdownMenu>\n                            {this.state.types.map(e => {\n                              return <DropdownItem key={e.id}\n                                                   dataset={e.typeName}\n                                                   value={e.typeName}\n                                                   onClick={this.handleTypes}\n                              >{e.typeName}\n                              </DropdownItem>;\n                            })}\n                          </DropdownMenu>\n                        </ButtonDropdown>\n                      </InputGroupButtonDropdown>\n                    </InputGroupText>\n                  </InputGroupAddon>\n                </InputGroup>\n                <br/>\n                <InputGroup style={{width: '100%'}}>\n                  <InputGroupAddon addonType=\"prepend\">@\n                    Field&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</InputGroupAddon>\n                  <Input placeholder=\"Example: Product Name\" name=\"objectname\" type=\"input\"\n                         value={this.state.objectname}\n                         onChange={this.handleInputChange}/>\n                </InputGroup>\n                <br/>\n                <InputGroup style={{width: '100%'}}>\n                  <InputGroupAddon addonType=\"prepend\">@\n                    Selector&nbsp;&nbsp;&nbsp;&nbsp;</InputGroupAddon>\n                  <Input placeholder=\"Example #button1\" name=\"objectselector\" type=\"input\"\n                         value={this.state.objectselector}\n                         onChange={this.handleInputChange}/>\n                </InputGroup>\n                <br/>\n                <InputGroup style={{width: '100%'}}>\n                  <InputGroupAddon addonType=\"prepend\">@\n                    Value&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</InputGroupAddon>\n                  <Input\n                    placeholder=\"Don't use if not necessary, target will be overridden by the target object variables.\"\n                    name=\"objectvalue\"\n                    type=\"input\"\n                    value={this.state.objectvalue}\n                    onChange={this.handleInputChange}/>\n                </InputGroup>\n              </form>\n              <HelpPageobjects name='B'/>\n            </CardBody>\n          </Card>\n        </div>);\n    }\n  }\n\n  renderGoToTest(prop) {\n    if (this.state.leftCardTest === 'true') {\n      return (\n        <Card>\n          <CardHeader color=\"link\" icon=\"info\" tag=\"h5\">Target subpage\n            <Button className=\"float-right\" type=\"switch\" size=\"sm\" name=\"leftCardTest\" outline color=\"secondary\"\n                    value={this.state.leftCardTest} onClick={this.toggleActiveCardTest}>Switch</Button>\n          </CardHeader>\n          <CardBody style={{backgroundColor: 'Light'}}>\n            <Teststructurenavitems url={this.state.url} navItems={this.state.navItems}\n                                   handlerFromParent={this.handleNavItems}/>\n            <br/>\n            <br/>\n            <br/>\n            <Helptestobjectsactions/>\n            <br/>\n          </CardBody>\n        </Card>);\n    }\n  }\n\n  renderActionTest(prop) {\n    if (this.state.leftCardTest !== 'true') {\n      return (<Card>\n        <CardHeader color=\"link\" icon=\"info\" tag=\"h5\">Target object variables\n          <Button className=\"float-right\" type=\"switch\" size=\"sm\" name=\"leftCardTest\" outline color=\"secondary\"\n                  value={this.state.leftCardTest} onClick={this.toggleActiveCardTest}>Switch</Button>\n        </CardHeader>\n        <CardBody style={{backgroundColor: 'Light'}}>\n          <InputGroup style={{width: '100%'}}>\n          </InputGroup>\n          <InputGroup style={{width: '100%', padding: '10px'}}>\n            <TestStructurePageObjects url={this.state.url}\n                                      pageObjectsNames={this.state.pageObjectsNames}\n                                      handlerFromParant={this.handlePageItems}/>\n          </InputGroup>\n          <Helptestobjectsgoto/>\n        </CardBody>\n      </Card>);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <HandleFramework url={this.state.url}\n                         datasets={this.state.actions}\n                         handlerFromParant={this.handleData} name=\"pagename\"/>\n        <br/>\n        <div>\n          <Alert color=\"success\" isOpen={this.state.visible} toggle={this.onDismiss} fade={true}>\n            Well done! You added property {this.state.property} with\n            value {this.state.value} to {this.state.name}\n          </Alert>\n        </div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({active: this.state.activeTab === '1'})}\n              onClick={() => {\n                this.toggle('1');\n              }}\n            >Start\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({active: this.state.activeTab === '2'})}\n              onClick={() => {\n                this.toggle('2');\n              }} disabled={!this.state.selectedPage}>Target\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({\n                active: this.state.activeTab === '4',\n              })\n              }\n              onClick={() => {\n                this.toggle('4');\n              }\n              }\n            >Target Input\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({\n                active: this.state.activeTab === '5',\n              })\n              }\n              onClick={() => {\n                this.toggle('5');\n              }\n              }\n            >Cucumber\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col sm=\"6\">\n                <div>\n                  <br/>\n                </div>\n                <br/>\n                {this.renderGoTo()}\n                {this.renderAction()}\n                <br/>\n                <Button className=\"btn btn-default\" type=\"submit\"\n                        onClick={this.handleSubmitPageObjectModel}>Save</Button>\n                <br/>\n              </Col>\n              <br/>\n            </Row>\n            <br/>\n            <Table url={this.state.url} dataset={this.state.pagename} columns={this.state.columns}\n                   updateTableFromParent={this.updateTableFromChild} shouldUpdateTable={this.state.shouldUpdateTable}/>\n          </TabPane>\n          <br/>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col sm=\"6\">\n                <br/>\n                <Card>\n                  <CardHeader tag=\"h5\">Page</CardHeader>\n                  <CardBody style={{backgroundColor: 'Light'}}>\n                    <InputGroup>\n                    <Input addon type=\"\" aria-label=\"type\" name= \"url\" value={this.state.url} onChange={this.handleInputChange}/>\n                    <Button className=\"float-right\" type=\"switch\" value={this.state.url} outline color=\"secondary\"\n                            onClick={this.update}>Submit</Button>\n                    </InputGroup>\n                    <br/>\n                    <Scenariostructure url={this.state.url}\n                                       datasets={this.state.actions}\n                                       handlerFromParant={this.handleData} handlerFromParant1={this.handleTabFromChild}\n                                       name=\"pagename\" handlerFromParent2={this.updateTable}/>\n                    <br/>\n                    <InputGroup>\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <Button className=\"btn btn-default\" name=\"renderSomething\" value=\"true\"\n                                  onClick={this.handleInputChange}\n                                  type=\"submit\">Add</Button>\n                          {this.renderSomething()}\n                        </InputGroupText>\n                      </InputGroupAddon>\n                    </InputGroup>\n                    <br/>\n                    <HelpPage name='E'/>\n                  </CardBody>\n                </Card>\n                <br/>\n                <Button className=\"btn btn-default\" name=\"activeTab\" value=\"2\" onClick={this.handleInputChange}\n                        type=\"submit\">Submit</Button>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane\n            tabId=\"4\">\n            <Row>\n              <Col sm=\"6\">\n                <br/>\n                {this.renderGoToTest('C')}\n                {this.renderActionTest('D')}\n              </Col>\n              <br/>\n            </Row>\n            <br/>\n            <Button className=\"btn btn-default\" color=\"warning\" type=\"submit\"\n                    onClick={this.autoFillObjects}>Autofill</Button>{' '}\n            <Button className=\"btn btn-default\" type=\"submit\" onClick={this.handleSubmitTest}>Save</Button>\n            <br/>\n            <br/>\n            <TableTests url={this.state.url} dataset={this.state.pagename} columns={this.state.columnstests}\n                        updateTableFromParent={this.updateTableFromChild}\n                        shouldUpdateTable={this.state.shouldUpdateTable}/>\n          </TabPane>\n          <TabPane tabId=\"3\">\n            <Structure url={this.state.url} datasets={this.state.actions}\n                       handlerFromParant={this.handleData} name=\"pagename\"/>\n          </TabPane>\n          <TabPane tabId=\"5\">\n            <StructureTest url={this.state.url} datasets={this.state.actions}\n                           handlerFromParant={this.handleData} name=\"pagename\"/>\n          </TabPane>\n        </TabContent>\n        <br/>\n        <br/>\n        <br/>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","// @flow\r\n\r\n// #region imports\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport compose from 'recompose/compose';\r\nimport About from './About';\r\nimport withEnterAnimation from '../../hoc/withEnterAnimation';\r\n// #endregion\r\n\r\n// #region redux map state and dispatch to props\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({}, dispatch);\r\n};\r\n// #endregion\r\n\r\nexport default compose(\r\n  withEnterAnimation(/* no option yet */),\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(About);\r\n","import React from 'react';\nimport {\n  Table,\n  Button,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter, DropdownMenu, DropdownItem, ButtonDropdown, InputGroupButtonDropdown, DropdownToggle, InputGroupText\n} from 'reactstrap';\nimport {\n  deleteScenario,\n  getAllScenariosByName,\n  editScenario,\n  getById,\n} from '../../services/API/FetchServerData';\nimport classnames from 'classnames';\n\n\nclass Scenariotable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inputChangedHandler = this.inputChangedHandler.bind(this);\n    this.removeRowOrPopUp = this.removeRowOrPopUp.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.renderPopUpEdit = this.renderPopUpEdit.bind(this);\n    this.togglePopup = this.togglePopup.bind(this);\n    this.togglePopupAndSave = this.togglePopupAndSave.bind(this);\n    this.update = this.update.bind(this);\n    this.updateFinshed = this.updateFinshed.bind(this);\n    this.toggleSplit = this.toggleSplit.bind(this);\n    this.toggledropdown = this.toggledropdown.bind(this);\n    this.handleTypes = this.handleTypes.bind(this);\n    this.state = {\n      scenarios: [],\n      type: '',\n      seconds: 0,\n      diagramUpdateFlag: false,\n      dropdownOpen: false,\n      splitButtonOpen:false,\n      modal: false,\n      setModal: false,\n      data: '',\n      shouldUpdateTable:false,\n      types: [{id: 1, type: 'input(id)'}, {id: 2, type: 'input(class)'}, {\n        id: 3,\n        type: 'input(css)',\n      }, {id: 4, type: 'input(name)'}, {id: 5, type: 'input(xpath)'}, {id: 6, type: 'button(id)'}, {\n        id: 7,\n        type: 'button(class)',\n      }, {id: 8, type: 'button(css)'}, {id: 9, type: 'button(name)'}, {\n        id: 10,\n        type: 'button(xpath)',\n      }, {id: 11, type: 'validateInput(id)'}, {id: 13, type: 'validateButton(id)'}, {\n        id: 14,\n        type: 'checkBox(id)',\n      }, {id: 15, type: 'option(id)'}, {id: 16, type: 'input(column,row)'}, {\n        id: 17,\n        type: 'validate(column,row)',\n      }, {id: 18, type: 'doubleClick(id)'}, {id: 19, type: 'dropDown(id)'}, {\n        id: 20,\n        type: 'datePicker(id)',\n      }],\n    };\n  }\n\n  inputChangedHandler = (event) => {\n    const updatedKeyword = event.target.value;\n  };\n\n  async componentDidUpdate() {\n    if (this.props.shouldUpdateTable) {\n      await this.update(true);\n      await this.update(false);\n    }\n  }\n\n  async handleTypes(event) {\n    this.setState({\n      type: event.target.value,\n    });\n  }\n\n  async updateFinshed(evt) {\n    evt.preventDefault();\n    await this.props.updateTableFromParent(false);\n  }\n\n  async update(state) {\n    if (state === true){\n      if (this.props.dataset !== '') {\n        let data = await getAllScenariosByName(this.props.url,this.props.dataset, false);\n        this.setState({\n          scenarios: data,\n        });\n        await this.props.updateTableFromParent(false);\n      }\n      else {\n      }\n    }\n    return true;\n  }\n\n  async togglePopup(event) {\n    console.log(event.target.value);\n    this.setState({\n      modal: !this.state.modal,\n      id: event.target.value,\n    });\n    let scenario = await getById(this.props.url,event.target.value);\n    this.setState({\n      pagename: scenario.pagename,\n      navname: scenario.navname,\n      navnameselector: scenario.navnameselector,\n      fieldname: scenario.fieldname,\n      selector: scenario.selector,\n      type: scenario.type,\n      value: scenario.value,\n    })\n  }\n\n  async togglePopupAndSave(event) {\n    let data = {\n      id: this.state.id,\n      istest: 'false',\n      pagename: this.state.pagename,\n      navname: this.state.navname,\n      navnameselector: this.state.navnameselector,\n      fieldname: this.state.fieldname,\n      selector: this.state.selector,\n      type: this.state.type,\n      value: this.state.value,\n    };\n    await editScenario(this.props.url,event.target.value, data);\n    await this.update(true);\n    this.setState({\n      modal: false,\n    });\n  }\n\n  async removeRowOrPopUp(event) {\n      let data = await deleteScenario(this.props.url,event.target.value);\n    await this.update(true);\n  }\n\n  toggledropdown(event) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n\n  toggleSplit() {\n    this.setState({\n      splitButtonOpen: !this.state.splitButtonOpen,\n    });\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  renderPopUpEdit(p) {\n    return (\n      <div>\n        <Button color=\"warning\" size=\"sm\" value={p.id} onClick={this.togglePopup}>Edit</Button>\n        <Button size=\"sm\" value={p.id} onClick={this.removeRowOrPopUp}>Remove</Button>\n        <Modal isOpen={this.state.modal} fade={false} toggle={this.togglePopup} className={classnames}>\n          <ModalHeader toggle={this.togglePopup}>Edit</ModalHeader>\n          <ModalBody>\n            <InputGroup style={{width: '100%'}}>\n              <InputGroupAddon addonType=\"prepend\">@ PageName</InputGroupAddon>\n              <Input placeholder={this.state.pagename} value={this.state.pagename} name=\"pagename\" type=\"input\" onChange={this.handleInputChange}/>\n            </InputGroup>\n            <br/>\n            <InputGroup style={{width: '100%'}}>\n              <InputGroupAddon addonType=\"prepend\">@ SubPageName</InputGroupAddon>\n              <Input placeholder={this.state.navname} value={this.state.navname} name=\"navname\" type=\"input\" onChange={this.handleInputChange}/>\n            </InputGroup>\n            <br/>\n            <InputGroup style={{width: '100%'}}>\n              <InputGroupAddon addonType=\"prepend\">@ SubPageSelector</InputGroupAddon>\n              <Input placeholder={this.state.navnameselector} value={this.state.navnameselector} name=\"navnameselector\" type=\"input\"\n                     onChange={this.handleInputChange}/>\n            </InputGroup>\n            <br/>\n            <InputGroup style={{width: '100%'}}>\n              <InputGroupAddon addonType=\"prepend\">@ FieldName</InputGroupAddon>\n              <Input placeholder={this.state.fieldname} name=\"fieldname\" value={this.state.fieldname} type=\"input\" onChange={this.handleInputChange}/>\n            </InputGroup>\n            <br/>\n            <InputGroup style={{width: '100%'}}>\n              <InputGroupAddon addonType=\"prepend\">@ Selector</InputGroupAddon>\n              <Input placeholder={this.state.selector} name=\"selector\" value={this.state.selector} type=\"input\" onChange={this.handleInputChange}/>\n            </InputGroup>\n            <br/>\n            <InputGroup style={{width: '100%'}}>\n              <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText>\n                  <Input addon type=\"input\" aria-label=\"type\" value={this.state.type}/>\n                  <InputGroupButtonDropdown addonType=\"prepend\" isOpen={this.state.splitButtonOpen}\n                                            toggle={this.toggleSplit}>\n                    <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggledropdown}>\n                      <DropdownToggle caret>\n                        Choose Type\n                      </DropdownToggle>\n                      <DropdownMenu>\n                        {this.state.types.map(e => {\n                          return <DropdownItem key={e.id}\n                                               dataset={e.type}\n                                               value={e.type}\n                                               onClick={this.handleTypes}\n                          >{e.type}\n                          </DropdownItem>;\n                        })}\n                      </DropdownMenu>\n                    </ButtonDropdown>\n                  </InputGroupButtonDropdown>\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n            <br/>\n            <InputGroup style={{width: '100%'}}>\n              <InputGroupAddon addonType=\"prepend\">@ Value</InputGroupAddon>\n              <Input placeholder={this.state.value} name=\"value\" value={this.state.value} type=\"input\" onChange={this.handleInputChange}/>\n            </InputGroup>\n            <br/>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"warning\" value={p.id} onClick={this.togglePopupAndSave}>Save</Button>{' '}\n            <Button color=\"secondary\" onClick={this.togglePopup}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>);\n  }\n\n  render() {\n    return (\n      <Table striped>\n        <thead>\n        <tr value={this.state.keyword}\n            onChange={(event) => this.handleInputChange(event)}>\n          {this.props.columns.map(function (p, index) {\n            return (\n              <th key={index}>{p}</th>\n            );\n          })}\n        </tr>\n        </thead>\n        <tbody>\n        {this.state.scenarios.map(function (p, index) {\n          return (\n            <tr key={index}>\n              <td>{index}</td>\n              <td>{p.pagename}</td>\n              <td>{p.navname}</td>\n              <td>{p.navnameselector}</td>\n              <td>{p.fieldname}</td>\n              <td>{p.selector}</td>\n              <td>{p.type}</td>\n              <td>{p.value}</td>\n              <td>{this.renderPopUpEdit(p)}</td>\n            </tr>\n          );\n        }.bind(this))}\n        </tbody>\n      </Table>\n    );\n  }\n}\n\nexport default Scenariotable;\n","import React from 'react';\nimport {\n  Table,\n  Button,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  InputGroup,\n  InputGroupAddon,\n  ModalFooter\n} from 'reactstrap';\nimport {getAllScenariosByName, deleteScenario, getById, editScenario} from '../../services/API/FetchServerData';\nimport classnames from \"classnames\";\n\n\nclass ScenarioTableTests extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inputChangedHandler = this.inputChangedHandler.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.onSelectCustomerRequest = this.onSelectCustomerRequest.bind(this);\n    this.renderPopUpEdit = this.renderPopUpEdit.bind(this);\n    this.togglePopup = this.togglePopup.bind(this);\n    this.togglePopupAndSave = this.togglePopupAndSave.bind(this);\n    this.updateFinshed = this.updateFinshed.bind(this);\n    this.update = this.update.bind(this);\n    this.removeRowOrPopUp = this.removeRowOrPopUp.bind(this);\n\n    this.state = {\n      scenarios: [],\n      seconds: 0,\n      diagramUpdateFlag: false,\n      removeButton: 'test',\n      tapped: false,\n      shouldUpdateTable:false,\n    };\n  }\n\n  inputChangedHandler = (event) => {\n    const updatedKeyword = event.target.value;\n    console.log(updatedKeyword);\n  };\n\n\n  handleInputChange(event) {\n    const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value,\n      });\n    console.log(name);\n  }\n\n  async togglePopup(event) {\n    this.setState({\n      modal: !this.state.modal,\n    });\n    let scenario = await getById(this.props.url, event.target.value);\n    this.setState({\n      pagename: scenario.pagename,\n      navname: scenario.navname,\n      navnameselector: scenario.navnameselector,\n      fieldname: scenario.fieldname,\n      selector: scenario.selector,\n      type: scenario.type,\n      value: scenario.value,\n    })\n  }\n\n  async componentDidUpdate() {\n    if (this.props.shouldUpdateTable) {\n      await this.update(true);\n      await this.update(false);\n    }\n  }\n\n  async updateFinshed(evt) {\n    evt.preventDefault();\n    await this.props.updateTableFromParent(false);\n  }\n\n  async update(state) {\n    if (state === true){\n      if (this.props.dataset !== '') {\n        let data = await getAllScenariosByName(this.props.url, this.props.dataset, true);\n        this.setState({\n          scenarios: data,\n        });\n        await this.props.updateTableFromParent(false);\n      }\n      else {\n      }\n    }\n    return true;\n  }\n\n  async togglePopup(event) {\n    this.setState({\n      modal: !this.state.modal,\n      id: event.target.value,\n    });\n    let scenario = await getById(this.props.url,event.target.value);\n    this.setState({\n      pagename: scenario.pagename,\n      navname: scenario.navname,\n      navnameselector: scenario.navnameselector,\n      fieldname: scenario.fieldname,\n      selector: scenario.selector,\n      type: scenario.type,\n      value: scenario.value,\n    })\n  }\n\n  async togglePopupAndSave(event) {\n    let data = {\n      id: this.state.id,\n      istest: 'true',\n      pagename: this.state.pagename,\n      navname: this.state.navname,\n      navnameselector: this.state.navnameselector,\n      fieldname: this.state.fieldname,\n      selector: this.state.selector,\n      type: this.state.type,\n      value: this.state.value,\n    };\n    console.log(data);\n    await editScenario(this.props.url, event.target.value, data);\n    await this.update(true);\n    this.setState({\n      modal: false,\n    });\n  }\n\n  async removeRowOrPopUp(event) {\n    let data = await deleteScenario(this.props.url,event.target.value);\n    await this.update(true);\n  }\n\n  renderPopUpEdit(p) {\n    return (\n      <div>\n        <Button color=\"warning\" size=\"sm\" value={p.id} onClick={this.togglePopup}>Edit</Button>\n        <Button size=\"sm\" value={p.id} onClick={this.removeRowOrPopUp}>Remove</Button>\n        <Modal isOpen={this.state.modal} fade={false} toggle={this.togglePopup} className={classnames}>\n          <ModalHeader toggle={this.togglePopup}>Edit</ModalHeader>\n          <ModalBody>\n            <InputGroup style={{width: '100%'}}>\n              <InputGroupAddon addonType=\"prepend\">@ PageName</InputGroupAddon>\n              <Input placeholder={this.state.pagename} value={this.state.pagename} name=\"pagename\" type=\"input\" onChange={this.handleInputChange}/>\n            </InputGroup>\n            <br/>\n            <InputGroup style={{width: '100%'}}>\n              <InputGroupAddon addonType=\"prepend\">@ SubPageName</InputGroupAddon>\n              <Input placeholder={this.state.navname} value={this.state.navname} name=\"navname\" type=\"input\" onChange={this.handleInputChange}/>\n            </InputGroup>\n            <br/>\n            <InputGroup style={{width: '100%'}}>\n              <InputGroupAddon addonType=\"prepend\">@ Value</InputGroupAddon>\n              <Input placeholder={this.state.value} name=\"value\" value={this.state.value} type=\"input\" onChange={this.handleInputChange}/>\n            </InputGroup>\n            <br/>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"warning\" value={p.id} onClick={this.togglePopupAndSave}>Save</Button>{' '}\n            <Button color=\"secondary\" onClick={this.togglePopup}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>);\n  }\n\n  onSelectCustomerRequest(event) {\n    console.log(event);\n    let data = deleteScenario(this.props.url, event.target.value);\n  }\n  render() {\n    return (\n      <Table striped>\n        <thead>\n        <tr value={this.state.keyword}\n            onChange={(event)=>this.handleInputChange(event)}>\n          {this.props.columns.map(function(p, index) {\n            return (\n              <th key={index}>{p}</th>\n            );\n          })}\n        </tr>\n        </thead>\n        <tbody>\n        {this.state.scenarios.map(function(p, index) {\n          return (\n            <tr key={index}>\n              <td>{index}</td>\n              <td>{p.navname}</td>\n              <td>{p.fieldname}</td>\n              <td>{p.value}</td>\n              <td>{this.renderPopUpEdit(p)}</td>\n            </tr>\n          );\n        }.bind(this))}\n        </tbody>\n      </Table>\n    );\n  }\n}\n\nexport default ScenarioTableTests;\n"],"sourceRoot":""}