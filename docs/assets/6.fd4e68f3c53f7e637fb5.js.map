{"version":3,"sources":["webpack:///./src/front/pages/account/Account.js","webpack:///./src/front/pages/account/Main.js","webpack:///./src/front/pages/account/index.js"],"names":["Account","PureComponent","Main","props","event","preventDefault","sessionStorage","setItem","target","value","trim","setState","email","password","handlesOnEmailChange","bind","handlesOnPasswordChange","handlesOnLogin","renderAccountCreated","state","responseAccountCreated","size","offset","renderSomething","userLogin","username","getItem","console","log","createUser","response","JSON","stringify","toString","React","Component","mapStateToProps","mapDispatchToProps","dispatch","bindActionCreators","compose","withEnterAnimation","connect"],"mappings":"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","file":"6.fd4e68f3c53f7e637fb5.js","sourcesContent":["// @flow\n\nimport React, { PureComponent } from 'react';\nimport TaskBar from './Main';\n\n\n\nimport {\n  type Match,\n  type Location,\n  type RouterHistory,\n} from 'react-router-dom';\n\ntype Props = {\n  // react-router 4:\n  match: Match,\n  location: Location,\n  history: RouterHistory,\n\n  ...any,\n};\ntype State = any;\n\nclass Account extends PureComponent<Props, State> {\n  render() {\n    return (\n      <div>\n        <br/>\n        <h1>Create Account</h1>\n        <br/>\n        <TaskBar/>\n      </div>\n    );\n  }\n}\n\nexport default Account;\n","import React from 'react';\nimport FileReader from 'filereader';\nimport fs from 'fs';\nimport {\n  createUser,\n} from '../../services/API/Api';\nimport {\n  Container, Col, Form,\n  FormGroup, Label, Input,\n  Button,\n} from 'reactstrap';\nimport {\n  type Match,\n  type Location,\n  type RouterHistory,\n} from 'react-router-dom';\nimport Row from 'reactstrap/lib/Row';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlesOnEmailChange = this.handlesOnEmailChange.bind(this);\n    this.handlesOnPasswordChange = this.handlesOnPasswordChange.bind(this);\n    this.handlesOnLogin = this.handlesOnLogin.bind(this);\n    this.renderAccountCreated = this.renderAccountCreated.bind(this);\n    this.state = {\n      responseAccountCreated: 'Submit',\n    };\n  }\n\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Row id=\"test\">\n          <Col md={{ size: 4, offset: 4 }} xs={{ size: 10, offset: 1 }}>\n            <form className=\"form-horizontal\" noValidate>\n              <fieldset  id=\"test\">\n                <legend>Create account</legend>\n                {this.renderAccountCreated()}\n                <div className=\"form-group\">\n                  <label\n                    htmlFor=\"inputEmail\"\n                    className=\"col-lg-2 control-label\"\n                  >\n                    Email\n                  </label>\n                  <Col lg={12}>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"inputEmail\"\n                      placeholder=\"Email\"\n                      autoComplete=\"username email\"\n                      onChange={this.handlesOnEmailChange}\n                    />\n                  </Col>\n                </div>\n\n                <div className=\"form-group\">\n                  <label\n                    htmlFor=\"inputPassword\"\n                    className=\"col-lg-2 control-label\"\n                  >\n                    Password\n                  </label>\n                  <Col lg={12}>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"inputPassword\"\n                      placeholder=\"Password\"\n                      autoComplete=\"current-password\"\n                      onChange={this.handlesOnPasswordChange}\n                    />\n                  </Col>\n                </div>\n                <div className=\"form-group\">\n                  <Col lg={{ size: 12 }}>\n                    <Button\n                      className=\"login-button btn-block\"\n                      color=\"warning\"\n                      onClick={this.handlesOnLogin}\n                    >\n                        <span>\n                          <i className=\"fa fa-spinner fa-pulse fa-fw\" />\n                        </span>\n                        <span>Submit</span>\n                    </Button>\n                  </Col>\n                </div>\n              </fieldset>\n            </form>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={{ size: 4, offset: 4 }} xs={{ size: 10, offset: 1 }}>\n            <div className=\"pull-right\">\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n  // #region form inputs change callbacks\n  handlesOnEmailChange = (event) => {\n    if (event) {\n      event.preventDefault();\n      // should add some validator before setState in real use cases\n      sessionStorage.setItem('USERNAME', event.target.value.trim());\n      this.setState({ email: event.target.value.trim() });\n    }\n  };\n\n  renderAccountCreated() {\n    if (this.state.renderSomething !== '') {\n      return (\n        <div placeholder={this.state.responseAccountCreated} value={this.state.responseAccountCreated} name=\"pagename\" type=\"input\">{this.state.responseAccountCreated}</div>\n      );\n    }\n  }\n\n  handlesOnPasswordChange = (event) => {\n    if (event) {\n      event.preventDefault();\n      // should add some validator before setState in real use cases\n      sessionStorage.setItem('PASSWORD', event.target.value.trim());\n      this.setState({ password: event.target.value.trim() });\n    }\n  };\n\n  async handlesOnLogin(event) {\n    if (event) {\n      event.preventDefault();\n\n      const userLogin =\n        {\n          username:sessionStorage.getItem('USERNAME'),\n          password: sessionStorage.getItem('PASSWORD'),\n        };\n\n      console.log(userLogin)\n      const response = await createUser(userLogin);\n      console.log(JSON.stringify(response));\n      this.state.responseAccountCreated = response.toString();\n      // should add some validator before setState in real use cases\n    }\n  };\n  // #endregion\n}\n\nexport default Main;\n","// @flow\n\n// #region imports\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport compose from 'recompose/compose';\nimport Account from './Account';\nimport withEnterAnimation from '../../hoc/withEnterAnimation';\n// #endregion\n\n// #region redux map state and dispatch to props\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({}, dispatch);\n};\n// #endregion\n\nexport default compose(\n  withEnterAnimation(/* no option yet */),\n  connect(mapStateToProps, mapDispatchToProps),\n)(Account);\n"],"sourceRoot":""}