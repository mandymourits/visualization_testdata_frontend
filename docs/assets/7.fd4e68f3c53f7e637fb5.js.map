{"version":3,"sources":["webpack:///./src/front/pages/login/Login.js","webpack:///./src/front/pages/login/index.js"],"names":["Login","email","password","event","preventDefault","history","props","push","pathname","setState","target","value","trim","state","userLogin","login","console","log","sessionStorage","setItem","loginUser","getItem","response","auth","setToken","token","setUserInfo","id","disconnectUser","isLogging","size","offset","handlesOnEmailChange","handlesOnPasswordChange","handlesOnLogin","handleButtonCreateAccount","PureComponent","isFetching","mapStateToProps","isAuthenticated","userAuth","mapDispatchToProps","dispatch","bindActionCreators","userAuthActions","compose","withEnterAnimation","connect"],"mappings":"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","file":"7.fd4e68f3c53f7e637fb5.js","sourcesContent":["// @flow\n\n// #region imports\nimport React, { PureComponent } from 'react';\nimport {\n  type Match,\n  type Location,\n  type RouterHistory,\n} from 'react-router-dom';\nimport Button from 'reactstrap/lib/Button';\nimport Row from 'reactstrap/lib/Row';\nimport Col from 'reactstrap/lib/Col';\nimport auth from '../../services/auth';\nimport { type UserAuthActions } from '../../types/redux/userAuth';\nimport {loginUser} from '../../services/API/Api';\n// #endregion\n\n// #region flow types\nexport type Props = {\n  // react-router 4:\n  match: Match,\n  location: Location,\n  history: RouterHistory,\n\n  // userAuth:\n  isAuthenticated: boolean,\n  isFetching: boolean,\n  isLogging: boolean,\n} & UserAuthActions;\n\nexport type State = {\n  email: string,\n  password: string,\n};\n// #endregion\n\nclass Login extends PureComponent<Props, State> {\n  static defaultProps = {\n    isFetching: false,\n    isLogging: false,\n  };\n\n  state = {\n    email: '',\n    password: '',\n  };\n\n  // #region lifecycle methods\n  componentDidMount() {\n    const { disconnectUser } = this.props;\n\n    disconnectUser(); // diconnect user: remove token and user info\n  }\n\n  render() {\n    const { email, password } = this.state;\n\n    const { isLogging } = this.props;\n\n    return (\n      <div className=\"content\">\n        <Row id=\"test\">\n          <Col md={{ size: 4, offset: 4 }} xs={{ size: 10, offset: 1 }}>\n            <form className=\"form-horizontal\" noValidate>\n              <fieldset  id=\"test\">\n                <legend>Login</legend>\n\n                <div className=\"form-group\">\n                  <label\n                    htmlFor=\"inputEmail\"\n                    className=\"col-lg-2 control-label\"\n                  >\n                    Email\n                  </label>\n                  <Col lg={12}>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"inputEmail\"\n                      placeholder=\"Email\"\n                      autoComplete=\"username email\"\n                      value={email}\n                      onChange={this.handlesOnEmailChange}\n                    />\n                  </Col>\n                </div>\n\n                <div className=\"form-group\">\n                  <label\n                    htmlFor=\"inputPassword\"\n                    className=\"col-lg-2 control-label\"\n                  >\n                    Password\n                  </label>\n                  <Col lg={12}>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"inputPassword\"\n                      placeholder=\"Password\"\n                      autoComplete=\"current-password\"\n                      value={password}\n                      onChange={this.handlesOnPasswordChange}\n                    />\n                  </Col>\n                </div>\n\n                <div className=\"form-group\">\n                  <Col lg={{ size: 12 }}>\n                    <Button\n                      className=\"login-button btn-block\"\n                      color=\"warning\"\n                      disabled={isLogging}\n                      onClick={this.handlesOnLogin}\n                    >\n                      {isLogging ? (\n                        <span>\n                          login in... &nbsp;\n                          <i className=\"fa fa-spinner fa-pulse fa-fw\" />\n                        </span>\n                      ) : (\n                        <span>Login</span>\n                      )}\n                    </Button>\n                  </Col>\n                  <Button\n                    color=\"link\"\n                    onClick={this.handleButtonCreateAccount}\n                  >Create account</Button>\n                </div>\n              </fieldset>\n            </form>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={{ size: 4, offset: 4 }} xs={{ size: 10, offset: 1 }}>\n            <div className=\"pull-right\">\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n  // #endregion\n\n  //Create account\n  // #region on login button click callback\n  handleButtonCreateAccount = async (event: SyntheticEvent<>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    const { history } = this.props;\n    history.push({ pathname: '/account' }); // back to Home\n  };\n  // #region form inputs change callbacks\n  handlesOnEmailChange = (event: SyntheticEvent<>) => {\n    if (event) {\n      event.preventDefault();\n      // should add some validator before setState in real use cases\n      this.setState({ email: event.target.value.trim() });\n    }\n  };\n\n  handlesOnPasswordChange = (event: SyntheticEvent<>) => {\n    if (event) {\n      event.preventDefault();\n      // should add some validator before setState in real use cases\n      this.setState({ password: event.target.value.trim() });\n    }\n  };\n  // #endregion\n\n  // #region on login button click callback\n  handlesOnLogin = async (event: SyntheticEvent<>) => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    const { history } = this.props;\n\n    const { email, password } = this.state;\n\n    const userLogin = {\n      login: email,\n      password: password,\n    };\n\n    try {\n      console.log(userLogin.login);\n      console.log(userLogin.password);\n\n      sessionStorage.setItem('USERNAME', userLogin.login);\n      sessionStorage.setItem('PASSWORD', userLogin.password);\n      const response = await loginUser(sessionStorage.getItem('USERNAME'),sessionStorage.getItem('PASSWORD'));\n      console.log(response);\n      auth.setToken(response.token);\n      auth.setUserInfo(response.id);\n      history.push({ pathname: '/protected' }); // back to Home\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log('login went wrong..., error: ', error);\n      /* eslint-enable no-console */\n    }\n  };\n  // #endregion\n\n  // #region on go back home button click callback\n  goHome = (event: SyntheticEvent<>) => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    const { history } = this.props;\n\n    history.push({ pathname: '/' });\n  };\n  // #endregion\n}\n\nexport default Login;\n","// @flow\r\n\r\n// #region imports\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport compose from 'recompose/compose';\r\nimport * as userAuthActions from '../../redux/modules/userAuth';\r\nimport Login from './Login';\r\nimport withEnterAnimation from '../../hoc/withEnterAnimation';\r\n// #endregion\r\n\r\n// #region redux map state and dispatch to props\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.userAuth.isAuthenticated,\r\n    isFetching: state.userAuth.isFetching,\r\n    isLogging: state.userAuth.isLogging,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      ...userAuthActions,\r\n    },\r\n    dispatch,\r\n  );\r\n};\r\n// #endregion\r\n\r\nexport default compose(\r\n  withEnterAnimation(/* no option yet */),\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(Login);\r\n"],"sourceRoot":""}